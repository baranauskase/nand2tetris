// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // select previous or load new
    Mux16(a=incout, b=in, sel=load, out=next);

    // reset if needed
    Not(in=reset, out=invreset);
    And16(a=next, b[0]=invreset, b[1]=invreset, b[2]=invreset, b[3]=invreset, b[4]=invreset, b[5]=invreset, b[6]=invreset, b[7]=invreset, b[8]=invreset, b[9]=invreset, b[10]=invreset, b[11]=invreset, b[12]=invreset, b[13]=invreset, b[14]=invreset, b[15]=invreset, out=postreset);

    // do we actually need to load anything?
    Or(a=reset, b=load, out=set1);
    Or(a=set1, b=inc, out=needsload);

    Register(in=postreset, load=needsload, out=regout);
    Inc16(in=regout, out=incout);
    And16(a=regout, b=true, out=out);
}
